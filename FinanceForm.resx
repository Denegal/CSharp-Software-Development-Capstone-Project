<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Title_Logo.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>